--- devtools/client/debugger/test/mochitest/browser_dbg_variables-view-popup-17.js
+++ devtools/client/debugger/test/mochitest/browser_dbg_variables-view-popup-17.js
@@ -7,17 +7,21 @@
  */
 
 const TAB_URL = EXAMPLE_URL + "doc_with-frame.html";
 
 let gTab, gPanel, gDebugger;
 let actions, gSources, gVariables;
 
 function test() {
-  initDebugger(TAB_URL).then(([aTab,, aPanel]) => {
+  let options = {
+    source: TAB_URL,
+    line: 1
+  };
+  initDebugger(TAB_URL, options).then(([aTab,, aPanel]) => {
     gTab = aTab;
     gPanel = aPanel;
     gDebugger = gPanel.panelWin;
     actions = bindActionCreators(gPanel);
     gSources = gDebugger.DebuggerView.Sources;
     gVariables = gDebugger.DebuggerView.Variables;
     let bubble = gDebugger.DebuggerView.VariableBubble;
     let tooltip = bubble._tooltip.panel;
@@ -33,17 +37,17 @@ function test() {
       executeSoon(() => EventUtils.synthesizeKey("VK_F11", {}));
       // The keypress should cause one resumed event and one paused event
       yield waitForThreadEvents(gPanel, "resumed");
       yield waitForThreadEvents(gPanel, "paused");
       // Here's the state we're actually interested in checking..
       checkVariablePopupClosed(bubble);
       yield resumeDebuggerThenCloseAndFinish(gPanel);
     });
-    waitForSourceShown(gPanel, ".html").then(testPopupHiding);
+    testPopupHiding();
   });
 }
 
 function addBreakpoint() {
   return actions.addBreakpoint({ actor: gSources.selectedValue, line: 21 });
 }
 
 function pauseDebuggee() {
